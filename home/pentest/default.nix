{ pkgs, ...}:

{
    # Allow unfree
    # nixpkgs.config.allowUnfree = true;
    home-manager = {
        users.tokugero = { pkgs, ... }: 
        {
            home = {
                packages = with pkgs; [
                    aircrack-ng
                    amass
                    apktool
                    binwalk
                    bloodhound
                    bloodhound-py
                    burpsuite
                    dirb
                    enum4linux
                    enum4linux-ng
                    evil-winrm
                    exiftool
                    feroxbuster
                    freeradius
                    freerdp
                    gdb
                    ghidra
                    gnupg
                    gobuster
                    hashcat
                    jadx
                    john
                    kismet
                    ligolo-ng
                    metasploit
                    mimikatz
                    net-snmp
                    netcat
                    nikto
                    nmap
                    p7zip
                    proxychains
                    pwndbg
                    pwntools
                    python312Packages.bloodyad
                    python312Packages.certipy-ad
                    python312Packages.impacket
                    radare2
                    rustscan
                    samba4Full
                    sherlock
                    smbmap
                    sqlcmd
                    sqlmap
                    steghide
                    tcpdump
                    thc-hydra
                    toybox
                    unzip
                    websocat
                    wireshark
                    wmic-bin
                    wordlists # wordlists_path
                    wpscan
                    wsmancli
                    zap
                ];
            };

        };
        useGlobalPkgs = true;
    };

    environment.systemPackages = with pkgs; [
        xrdp
        freerdp3
    ];

    services.xrdp = {
        enable = true;
        #defaultWindowManager = "startplasma-x11";
        defaultWindowManager = "gnome-session";

        extraConfDirCommands = ''
            substituteInPlace $out/xrdp.ini \
                --replace 'crypt_level=high' 'crypt_level=low' \
                --replace '#tcp_send_buffer_bytes=32768' 'tcp_send_buffer_bytes=4194304'
        '';
    };

    programs.zsh.loginShellInit = ''
        # if ~/.local/build already exists, pull - otherwise clone
        # git clone https://github.com/Tokugero/kali-build.git ~/.local/build/
        git -C ~/.local/build pull || git clone https://github.com/Tokugero/kali-build.git ~/.local/build/
    '';

    programs.zsh.interactiveShellInit = ''
        . ~/.local/build/aliases
        . ~/.local/build/.bash_aliases
        syncsecrets = () {
            export BW_SESSION=$(bw unlock --raw);
            echo "Syncing secrets";
            bw sync;
            echo "Getting ngrok";
            bw get notes ngrok > ~/.config/ngrok/ngrok.yml;
            echo "Getting ssh keys";
            results=$(bw list items --folderid $(bw get folder cli | jq -r .id) --search "ssh_kali");
            IFS=$'\n';
            for item in $(echo $results | jq -r '.[] | .notes + " " + (.fields[] | select(.name == "path") | .value)'); do
                content=$(echo $item | awk '{print $1}' | base64 -d);
                location=$(eval "echo $(echo $item | awk '{print $2}')");
                mkdir -p ~/.ssh;
                echo $location;
                touch $location;
                echo $content > $location;
                chmod 0600 $location;
                echo "Synced "$location;
            done;
            bw lock;
            unset BW_SESSION;
        };
    '';
}
